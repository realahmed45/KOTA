(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[855],{47855:function(e,t,i){"use strict";i.r(t),i.d(t,{default:function(){return w}});var n=i(3827),o=i(64090),s=i(66376),a=i(11984),r=i(27819),u=i(34284),c=i(5955);let l="\n//	Classic Perlin 2D Noise \n//	by Stefan Gustavson\n//\nvec2 fade(vec2 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\nvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\n\nfloat cnoise21(vec2 P){\n  vec4 Pi = floor(P.xyxy) + vec4(0.0, 0.0, 1.0, 1.0);\n  vec4 Pf = fract(P.xyxy) - vec4(0.0, 0.0, 1.0, 1.0);\n  Pi = mod(Pi, 289.0); // To avoid truncation effects in permutation\n  vec4 ix = Pi.xzxz;\n  vec4 iy = Pi.yyww;\n  vec4 fx = Pf.xzxz;\n  vec4 fy = Pf.yyww;\n  vec4 i = permute(permute(ix) + iy);\n  vec4 gx = 2.0 * fract(i * 0.0243902439) - 1.0; // 1/41 = 0.024...\n  vec4 gy = abs(gx) - 0.5;\n  vec4 tx = floor(gx + 0.5);\n  gx = gx - tx;\n  vec2 g00 = vec2(gx.x,gy.x);\n  vec2 g10 = vec2(gx.y,gy.y);\n  vec2 g01 = vec2(gx.z,gy.z);\n  vec2 g11 = vec2(gx.w,gy.w);\n  vec4 norm = 1.79284291400159 - 0.85373472095314 * vec4(dot(g00, g00), dot(g01, g01), dot(g10, g10), dot(g11, g11));\n  g00 *= norm.x;\n  g01 *= norm.y;\n  g10 *= norm.z;\n  g11 *= norm.w;\n  float n00 = dot(g00, vec2(fx.x, fy.x));\n  float n10 = dot(g10, vec2(fx.y, fy.y));\n  float n01 = dot(g01, vec2(fx.z, fy.z));\n  float n11 = dot(g11, vec2(fx.w, fy.w));\n  vec2 fade_xy = fade(Pf.xy);\n  vec2 n_x = mix(vec2(n00, n01), vec2(n10, n11), fade_xy.x);\n  float n_xy = mix(n_x.x, n_x.y, fade_xy.y);\n  return 2.3 * n_xy;\n}\n",h={name:"DotScreenShader",uniforms:{uTime:{value:null},uMouse:{value:new s.FM8(0,0)},uMouseEffect:{value:.1},uAmount:{value:.15},uVelocity:{value:0},tDiffuse:{value:1},tSize:{value:new s.FM8(256,256)},center:{value:new s.FM8(.5,.5)},angle:{value:1.57},scale:{value:1}},vertexShader:"\n\n		varying vec2 vUv;\n		varying vec3 vPosition;\n		void main() {\n			vUv = uv;\n			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1. );\n\n		}",fragmentShader:"\n\n	uniform vec2 center;\n	uniform float angle;\n	uniform float scale;\n	uniform float uTime;\n	uniform float uAmount;\n	uniform vec2 uMouse;\n	uniform float uMouseEffect;\n	uniform float uVelocity;\n	uniform vec2 tSize;\n	float PI = ".concat(Math.PI,";\n	float uRandom = ").concat(Math.random(),";\n	varying vec3 vPosition;\n\n	uniform sampler2D tDiffuse;\n\n	varying vec2 vUv;\n\n	").concat(l,"\n	\n	float pattern() {\n\n		float s = sin( angle ), c = cos( angle );\n\n		vec2 tex = vUv * tSize - center;\n		vec2 point = vec2( c * tex.x - s * tex.y, s * tex.x + c * tex.y ) * scale;\n\n		return ( sin( point.x ) * sin( point.y ) ) * 4.0;\n\n	}\n\n	void main() {\n		vec2 newUv = vUv;\n		vec3 pos = vPosition;\n		\n		vec2 p = 2. * vUv - vec2(1.);\n		p += 0.3 * uRandom * cos(2. * (p.yx * uRandom) + uTime);\n		p += 0.4 * uRandom * cos(5. * (p.xy * uRandom) + 1.5  * uTime);\n		p += 0.2 * uRandom * cos(3.7 * p.yx + 2.5  * uTime);\n		p += 0.2 * cos(7. * p.yx + 0.5  * uTime);\n\n		vec2 centredUv = 2. * vUv - vec2(1.);\n		newUv = vUv + centredUv * vec2(1., 1.);\n\n		newUv.x = mix(vUv.x, length(p), uAmount);\n		newUv.y = mix(vUv.y, 0., uAmount);\n\n		vec4 color = texture2D( tDiffuse, newUv );\n		gl_FragColor = vec4(color.xyz, 1.);\n	}")},m=[{nr:1,mouseEffect:1,distortionAmount:.15,shapeAmount:.2,noiseOpacity:.4,widthMultiplier:.6,heightMultiplier:2,position:{x:-.1,y:.3},rotation:.7,speedMultiplier:1,timeStart:0,background:15724527},{nr:2,mouseEffect:1,distortionAmount:.15,shapeAmount:.15,noiseOpacity:.4,widthMultiplier:.4,heightMultiplier:2,position:{x:-.1,y:.3},rotation:2.7,speedMultiplier:1,timeStart:100,background:15724527},{nr:3,mouseEffect:1,distortionAmount:.15,shapeAmount:.25,noiseOpacity:.4,widthMultiplier:.5,heightMultiplier:2,position:{x:-.2,y:.3},rotation:2.5,speedMultiplier:1,timeStart:100,background:15724527},{nr:4,mouseEffect:1,distortionAmount:.15,shapeAmount:.25,noiseOpacity:.4,widthMultiplier:.6,heightMultiplier:2,position:{x:.2,y:0},rotation:3.5,speedMultiplier:1,timeStart:-100,background:15724527},{nr:5,mouseEffect:1,distortionAmount:.15,shapeAmount:.25,noiseOpacity:.4,widthMultiplier:.5,heightMultiplier:1.9,position:{x:-.3,y:.3},rotation:1.1,speedMultiplier:1,timeStart:-100,background:15724527},{nr:6,mouseEffect:1,distortionAmount:.15,shapeAmount:.25,noiseOpacity:.4,widthMultiplier:.3,heightMultiplier:2,position:{x:.05,y:-.1},rotation:4.7,speedMultiplier:1,timeStart:-100,background:0}],d=["#F2E6DB","#71D9E9","#8c3dd0","#D03F83","#F43FF9","#8c3dd0"],p=d.map(e=>new s.Ilk(e)),v="\nvarying vec2 uPos;\nvarying vec2 vUv;\nuniform vec2 uRayMouse;\nuniform float uMouseEffect;\n\nuniform float uRatio;\nfloat uTrailWidth = 0.15; \nfloat PI = ".concat(Math.PI,";\n\nvoid main() {\n    vUv = uv;\n    \n    vec2 direction = normalize(position.xy - uRayMouse);\n    \n    float distanceToMouse = length(position.xy - uRayMouse);\n    \n    float falloff = smoothstep(0., uTrailWidth, distanceToMouse);\n    \n    float displacement = uMouseEffect * 0.1 * falloff;\n    // float displacementY = uMouseEffect * 0.1 * falloff * uRatio;\n\n    // float displacement = mix(displacementX, displacementY, 1.5);\n    \n    vec3 newPosition = vec3(position.xy - direction * displacement / 2., position.z );\n    \n    uPos = direction * displacement * 2.;\n    \n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}\n  "),f="\n  uniform float uTime;\n  uniform vec2 uRayMouse;\n  uniform float uMouseEffect;\n  uniform float uNoiseAmount;\n  uniform float uAmount;\n  uniform float uPow;\n  uniform float uAlpha;\n  varying vec2 vUv;\n  varying vec2 uPos;\n  uniform vec3 uColor[".concat(d.length,"];\n  float PI = ").concat(Math.PI,";\n\n  ").concat(l,"\n    \n  void main() {\n    vec3 firstColor = uColor[0];\n    vec2 seed = (vUv * -uPos) * mix(vUv, uPos, 30. * uAmount);\n    \n    float ml = pow(").concat(d.length,"., 0.5) * -0.01;\n    float n = cnoise21(seed) + 1. * uTime;\n    vec3 color;\n    color = mix(firstColor, firstColor, cnoise21(seed) / 1000.);\n\n    for (int i = 1; i < ").concat(d.length-1,"; i++) {\n      float amount = (float(i) + 1.) * 0.09;\n      float n2 = smoothstep(amount * uTime + ml, amount * uTime + ml + amount * uTime, n * uTime);\n      color = mix(color, uColor[i], n2);\n    }\n  \n		float alpha = uAlpha * pow(sin(vUv.x * PI), uPow);\n		alpha *= pow((sin(vUv.y * PI)), uPow);\n    // alpha = 1.;\n    gl_FragColor = vec4(color, alpha);\n  }\n");var g=i(54077),y=i.n(g);class x{initPostProcessing(){this.composer=new r.x(this.renderer),this.composer.addPass(new u.C(this.scene,this.camera)),this.effect1=new c.T(h),this.effect1.uniforms.uAmount.value=this.settings.distortionAmount,this.effect1.uniforms.uMouseEffect.value=this.settings.mouseEffect,this.composer.addPass(this.effect1)}setupResize(){window.addEventListener("resize",this.resize.bind(this))}resize(){this.width=this.container.offsetWidth,this.height=this.container.offsetHeight,this.camera.aspect=this.width/this.height,this.camera.fov=2*Math.atan(this.height/2/this.positionZ)*180/Math.PI,this.camera.updateProjectionMatrix(),this.renderer.setSize(this.width,this.height),this.composer&&this.composer.setSize(this.width,this.height),this.initResponsivePositioning()}followMouse(){let e=a.p8.quickTo(this.uMouse,"x",{duration:.5,ease:"power1"}),t=a.p8.quickTo(this.uMouse,"y",{duration:.5,ease:"power1"});this.container.addEventListener("mousemove",i=>{e(i.clientX/this.width-.5),t(i.clientY/this.height-.5),this.checkPositionOnPlane(i)})}getMouseVelocity(e,t){return a.p8.utils.clamp(0,.5,Math.sqrt(Math.pow(e,2)+Math.pow(t,2)))}checkPositionOnPlane(e){let t=[];t.x=e.clientX/window.innerWidth*2-1,t.y=-(e.clientY/window.innerHeight*2)+1,this.raycaster.setFromCamera(t,this.camera);let i=this.raycaster.intersectObject(this.plane);i.length>0&&this.allowRayMouse&&(this.rayXTo(i[0].point.x/this.plane.scale.x),this.rayYTo(i[0].point.y/this.plane.scale.y))}addObjects(){this.material=new s.jyz({uniforms:{uTime:{value:0},uNoiseAmount:{value:0},uRayMouse:{value:this.uMouse},uAmount:{value:this.activeBackground.shapeAmount},uPow:{value:3},uAlpha:{value:0},uColor:{value:p},uMouseEffect:{value:this.activeBackground.mouseEffect},uVelocity:{value:0},uRatio:{value:1}},side:s.ehD,transparent:!0,vertexShader:v,fragmentShader:f}),this.geometry=new s._12(1,1,128,128),this.plane=new s.Kj0(this.geometry,this.material),this.camera.rotation.z=this.activeBackground.rotation,this.initResponsivePositioning(),this.scene.add(this.plane)}initResponsivePositioning(){this.plane.scale.x=this.activeBackground.widthMultiplier*this.width,this.plane.scale.y=this.activeBackground.heightMultiplier*(1.25*this.height),this.plane.scale.z=this.activeBackground.widthMultiplier*this.width,this.camera.position.x=this.activeBackground.position.x*this.width,this.camera.position.y=-this.activeBackground.position.y*this.height,this.plane.material.uniforms.uRatio=this.plane.scale.x/this.plane.scale.y}animateIn(e,t){a.p8.to(this.material.uniforms.uPow,{value:1.5,duration:e,delay:t,ease:"power4.out"}),a.p8.to(this.material.uniforms.uAlpha,{value:1,duration:e,delay:t,ease:"power4.out"}),this.allowRayMouse=!1,a.p8.to(this.rayMouse,{x:-.4,y:-.4,duration:e,ease:"power1.out",immediateRender:!1,onComplete:()=>{this.allowRayMouse=!0}})}animateOut(e,t){a.p8.to(this.material.uniforms.uPow,{value:3,duration:e,delay:t,ease:"power4.out"}),a.p8.to(this.material.uniforms.uAlpha,{value:0,duration:e,delay:t,ease:"power4.out"}),this.allowRayMouse=!1,a.p8.to(this.rayMouse,{x:1,y:1,duration:2*e,ease:"power4.out",onComplete:()=>{this.allowRayMouse=!0}})}setScrollTrigger(e){a.ic.create({trigger:document.body,start:"top top",end:()=>"+=".concat(e.offsetHeight),id:"ScrollTrigger",onUpdate:e=>{let t=1-e.progress*(1-this.scrollTriggerOpacity);t=Math.max(this.scrollTriggerOpacity,Math.min(t,1)),a.p8.set(this.container,{opacity:t,duration:3,ease:"power4.out"})}})}render(){this.time+=.01,this.reverseUTime?(this.uTime-=.001,this.uTime<.1&&(this.reverseUTime=!1)):(this.uTime+=.001,this.uTime>.5&&(this.reverseUTime=!0)),this.material.uniforms.uTime.value=this.uTime,this.material.uniforms.uRayMouse.value=this.rayMouse,this.effect1.uniforms.uMouse.value=this.uMouse,this.effect1.uniforms.uTime.value=this.time*this.settings.speedMultiplier,this.renderer.render(this.scene,this.camera),this.composer.render(),requestAnimationFrame(this.render.bind(this))}destroy(){window.removeEventListener("resize",this.resize.bind(this)),this.isPlaying=!1,this.plane.geometry.dispose(),this.plane.material.dispose(),this.renderer.dispose(),this.container.contains(this.renderer.domElement)&&this.container.removeChild(this.renderer.domElement)}constructor(e){this.scene=new s.xsS,this.container=e.dom,this.darkBackground=e.darkBackground,this.scrollTriggerOpacity=e.scrollTriggerOpacity,this.activeBackground=m[Number(this.container.dataset.background)],this.width=this.container.offsetWidth,this.height=this.container.offsetHeight,this.renderer=new s.CP7,this.renderer.setPixelRatio(Math.min(window.devicePixelRatio,2)),this.renderer.setSize(this.width,this.height),this.renderer.setClearColor(this.darkBackground?0:15724527),this.container.appendChild(this.renderer.domElement),this.camera=new s.cPb(40,this.width/this.height,10,1e4),this.positionZ=4e3,this.camera.position.z=this.positionZ,this.camera.aspect=this.width/this.height,this.camera.fov=2*Math.atan(this.height/2/this.positionZ)*180/Math.PI,this.camera.updateProjectionMatrix(),this.time=this.activeBackground.timeStart,this.uTime=.1,this.reverseUTime=!1,this.uMouse=new s.FM8(0,0),this.rayMouse=new s.FM8(1,1),this.reverseUTime=!1,this.allowRayMouse=!1,this.raycaster=new s.iMs,this.rayXTo=a.p8.quickTo(this.rayMouse,"x",{duration:.75,ease:"power1"}),this.rayYTo=a.p8.quickTo(this.rayMouse,"y",{duration:.75,ease:"power1"}),this.settings={darkBackground:!0,mouseEffect:this.activeBackground.mouseEffect,distortionAmount:this.activeBackground.distortionAmount,shapeAmount:this.activeBackground.shapeAmount,rotation:this.activeBackground.rotation,positionX:this.activeBackground.position.x,positionY:this.activeBackground.position.y,widthMultiplier:this.activeBackground.widthMultiplier,heightMultiplier:this.activeBackground.heightMultiplier,speedMultiplier:this.activeBackground.speedMultiplier,noiseOpacity:this.activeBackground.noiseOpacity,animateOut:()=>{this.animateOut(2,.1)},animateIn:()=>{this.animateIn(2,.1)},toggleScrollInOut:()=>{document.querySelector("body").classList.toggle("scrollable"),this.setScrollTrigger(0,"body",1,"bottom bottom")}},this.initPostProcessing(),this.addObjects(),this.resize(),this.render(),this.setupResize(),this.followMouse()}}var w=function(e){let{scrollTrigger:t=!1,scrollTriggerOpacity:i=.5,variation:s=0,darkBackground:a=!1,position:r="fixed",noise:u=!0}=e,c=(0,o.useRef)(null);return(0,o.useLayoutEffect)(()=>{let e=c.current,n=setTimeout(()=>{o.resize()},100),o=new x({dom:e,darkBackground:a,scrollTriggerOpacity:i});return o.animateIn(2,.5),t&&o.setScrollTrigger(e),()=>{o.destroy(),clearTimeout(n)}},[]),(0,n.jsx)("div",{ref:c,className:y().container,"data-background":s,"data-dark-background":a,"data-position":r,"data-noise":u})}},11984:function(e,t,i){"use strict";i.d(t,{BW:function(){return r.Flip},C2:function(){return s.SplitText},ic:function(){return o.ScrollTrigger},p8:function(){return n.ZP},t_:function(){return a.CustomEase}});var n=i(93696),o=i(52955),s=i(76756),a=i(85349),r=i(21169);n.ZP.registerPlugin(o.ScrollTrigger,s.SplitText,r.Flip),n.ZP.config({autoSleep:60,nullTargetWarn:!1}),n.ZP.defaults({duration:1/((1+Math.sqrt(5))/2)})},54077:function(e){e.exports={container:"webgl-background_container__Ojc1v",noise:"webgl-background_noise__uxurv"}}}]);